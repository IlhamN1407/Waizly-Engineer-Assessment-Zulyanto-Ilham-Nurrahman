1. Tampilkan seluruh data dari tabel "employees" (5 Points)

Jawaban : 
SELECT * FROM `employees`; 


2. Berapa banyak karyawan yang memiliki posisi pekerjaan (job title) "Manager"? (5 Points)

Jawaban : 
SELECT Count(*) as count FROM `employees` WHERE `job_title` = 'Manager';


3. Tampilkan daftar nama dan gaji (salary) dari karyawan yang bekerja di departemen "Sales" atau
"Marketing" (10 Points)

Jawaban :
SELECT name, salary FROM `employees` WHERE `departement` = 'Sales' OR `departement` = 'Marketing';


4. Hitung rata-rata gaji (salary) dari karyawan yang bergabung (joined) dalam 5 tahun terakhir (berdasarkan
kolom "joined_date") (10 Points)

Jawaban : 
SELECT AVG(salary) AS rata_rata FROM employees WHERE joined_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);


5. Tampilkan 5 karyawan dengan total penjualan (sales) tertinggi dari tabel "employees" dan "sales_data"
(10 Points)

Jawaban : 
SELECT e.employee_id, e.name, SUM(sd.sales) AS total_sales
FROM employees e
JOIN sales_data sd ON e.employee_id = sd.employee_id
GROUP BY e.employee_id, e.name
ORDER BY total_sales DESC
LIMIT 5;


6. Tampilkan nama, gaji (salary), dan rata-rata gaji (salary) dari semua karyawan yang bekerja di departemen
yang memiliki rata-rata gaji lebih tinggi dari gaji rata-rata di semua departemen (15 Points)

Jawaban : 
SELECT e.name, e.salary, c.avg_salary 
from employees e 
join (
    SELECT departement, AVG(salary) as avg_salary from employees 
    GROUP BY departement 
    having AVG(salary) > (SELECT AVG(salary) from employees)
    ) 
    c on e.departement = c.departement;



7. Tampilkan nama dan total penjualan (sales) dari setiap karyawan, bersama dengan peringkat (ranking)
masing-masing karyawan berdasarkan total penjualan. Peringkat 1 adalah karyawan dengan total
penjualan tertinggi (25 Points)

Jawaban : 
SELECT 
    e.name,
    SUM(sd.sales) AS total_sales,
    RANK() OVER (ORDER BY SUM(sd.sales) DESC) AS ranking
FROM 
    employees e
JOIN 
    sales_data sd ON e.employee_id = sd.employee_id
GROUP BY 
    e.employee_id, e.name
ORDER BY 
    ranking;


8. Buat sebuah stored procedure yang menerima nama departemen sebagai input, dan mengembalikan
daftar karyawan dalam departemen tersebut bersama dengan total gaji (salary) yang mereka terima (20
Points)

Jawaban : 
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetDepartmentEmployeeSalaries`(IN departmentName VARCHAR(255))
BEGIN
    SELECT 
        e.name,
        e.salary
    FROM 
        employees e
    WHERE 
        e.departement = departmentName;
    
    SELECT 
        SUM(e.salary) AS total_salary
    FROM 
        employees e
    WHERE 
        e.departement = departmentName;
END